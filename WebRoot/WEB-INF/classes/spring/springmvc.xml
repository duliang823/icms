<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	
	<!-- 组件扫描方式配置
		可以扫描controller,service,……
		这里扫描controller，则指定controller的包
	 -->
	 <context:component-scan base-package="cn.itcast.ssm.controller"></context:component-scan>
	
	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	<!-- 使用mvc:annotation-driven代替上面注解映射器和注解适配器配置
		mvc:annotation-driven默认加载很多的参数绑定方法，
		比如json转换解析器默认加载了，如果使用mvc:annotation-driven，就不需要配置上面的RequestMappingHandlerMapping和RequestMappingHandlerAdapter；
		实际开发中使用：mvc:annotation-driven
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 视图解析器
		解析jsp视图，默认使用jstl标签,classpath下的得有jstl的包
		prefix:前缀；
		suffix:后缀；
	-->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean> -->
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
        <property name="templateLoaderPath">  
            <!-- <value>/WEB-INF/views/</value>   -->
            <value></value>  
        </property>  
    </bean>  
     <bean id="htmlviewResolver"  
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="suffix" value=".html" /> 
        <property name="order" value="0"></property> 
        <property name="contentType" value="text/html;charset=UTF-8"></property>         
    </bean>  
	
	
	
	
</beans>